{"version":3,"sources":["components/CustomHeader.tsx","components/Login.tsx","components/Dashboard.tsx","components/Flows/Flow.tsx","App.tsx","components/Rules.tsx","components/Plantilla.tsx","serviceWorker.js","index.js"],"names":["CustomHeader","href","prefix","this","props","stage","Stage","login","onClick","setStage","dashboard","isCurrentPage","rules","templates","children","React","Component","Login","style","maxWidth","src","height","padding","id","labelText","placeholder","width","type","data","name","WhatsApp","Voz","SMS","amt","data2","value","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","Sector","d","stroke","r","toFixed","Dashboard","state","activeIndex","onPieEnter","_","index","setState","lg","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Legend","Line","activeDot","PieChart","Pie","activeShape","onMouseEnter","initialNodes","label","position","selectable","initialEdges","source","target","Flow","useState","nodes","setNodes","edges","setEdges","selected","setSelected","segmento","setSegmento","horario","setHorio","onNodesChange","useCallback","changes","nds","applyNodeChanges","onEdgesChange","eds","applyEdgeChanges","onConnect","params","addEdge","defaultEdgeOptions","strokeWidth","markerEnd","MarkerType","ArrowClosed","color","onNodeSelected","length","fitView","onSelectionChange","selection","minZoom","find","title","open","items","titleText","selectedItem","onChange","Rules","Plantilla","plantillas","bind","event","aux","defaultSelected","legend","console","log","marginBottom","rows","App","ScreenDispatcher","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1276a51b.chunk.js","sourcesContent":["import { Content, Header, HeaderContainer, HeaderMenu, HeaderMenuItem, HeaderName, HeaderNavigation } from \"carbon-components-react\";\nimport React from \"react\";\nimport { Stage } from \"../App\";\n\n\ninterface IProps {children?: React.ReactNode, stage: Stage, setStage(stage: Stage):void}\ninterface IState {}\n\n\nclass CustomHeader extends React.Component<IProps, IState> {\n\n\n\n    render(): React.ReactNode {\n        return <>\n        <Header aria-label=\"IBM\">\n            <HeaderName href=\"#\" prefix=\"IBM\">\n                [Comunicacion de Fallas]\n            </HeaderName>\n            <HeaderNavigation aria-label=\"IBM [Comunicacion de Fallas]\">\n          {this.props.stage !== Stage.login &&\n          <>\n          <HeaderMenuItem href=\"#\" onClick={() => this.props.setStage(Stage.dashboard)} isCurrentPage={this.props.stage == Stage.dashboard}>Dashboard</HeaderMenuItem>\n          <HeaderMenuItem href=\"#\" onClick={() => this.props.setStage(Stage.rules)} isCurrentPage={this.props.stage == Stage.rules}>Rules</HeaderMenuItem>\n          <HeaderMenuItem href=\"#\" onClick={() => this.props.setStage(Stage.templates)} isCurrentPage={this.props.stage == Stage.templates}>Plantillas</HeaderMenuItem>\n          <HeaderMenuItem href=\"#\">Admin</HeaderMenuItem>\n          </>\n          }\n        </HeaderNavigation>\n        </Header>\n        \n\n        <Content>\n            {this.props.children}\n        </Content>\n\n        </>\n    }\n}\n\n\nexport default CustomHeader","import { Button, TextInput } from \"carbon-components-react\";\nimport React from \"react\";\nimport { Stage } from \"../App\";\n\ninterface IProps {\n    setStage(stage: Stage): void\n}\ninterface IState {}\n\nexport class Login extends React.Component<IProps, IState>{\n\n\n    constructor(props: IProps) {\n        super(props)\n    }\n\n\n\n    render(): React.ReactNode {\n        return <div style={{maxWidth: \"500px\"}}>\n            <br></br>\n            <br></br>\n            <br></br>\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/c/cc/Gtd_logo_2019.svg\" height={80} style={{padding: \"1rem\"}}></img>\n            <img src=\"https://upload.wikimedia.org/wikipedia/commons/5/51/IBM_logo.svg\" height={80} style={{padding: \"1rem\"}}></img>\n            \n            <br></br>\n            <br></br>\n        <h1>Login Screen</h1>\n        <h3>AppID SSO</h3>\n        <br></br>\n\n        <TextInput id=\"user\" labelText=\"Username\" placeholder=\"Username\" style={{width: \"400px\"}}></TextInput>\n        <br></br>\n        <TextInput id=\"passwd\" labelText=\"Password\" placeholder=\"Passw0rd\" type={\"password\"} style={{width: \"400px\"}}></TextInput>\n        <br></br>\n        <br></br>\n        <Button onClick={() => this.props.setStage(Stage.dashboard)} style={{width: \"250px\"}}>Login</Button>\n        </div>\n    }\n\n}","import { Button, Column, Grid, TextInput, Tile } from \"carbon-components-react\";\nimport React from \"react\";\nimport { Stage } from \"../App\";\n\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend } from 'recharts';\nimport { PieChart, Pie, Sector } from 'recharts';\nconst data = [\n  {\n    name: 'Enero',\n    WhatsApp: 4000,\n    Voz: 2400,\n    SMS: 2400,\n  },\n  {\n    name: 'Febrero',\n    WhatsApp: 3000,\n    Voz: 1398,\n    amt: 2210,\n  },\n  {\n    name: 'Marzo',\n    WhatsApp: 2000,\n    Voz: 9800,\n    SMS: 2000,\n    amt: 2290,\n  },\n  {\n    name: 'Abril',\n    WhatsApp: 2780,\n    Voz: 3908,\n    SMS: 2800,\n    amt: 2000,\n  },\n  {\n    name: 'Mayo',\n    WhatsApp: 1890,\n    Voz: 4800,\n    SMS: 4400,\n    amt: 2181,\n  },\n  {\n    name: 'Junio',\n    WhatsApp: 2390,\n    Voz: 3800,\n    SMS: 3400,\n    amt: 2500,\n  },\n  {\n    name: 'Julio',\n    WhatsApp: 3490,\n    Voz: 4300,\n    SMS: 7400,\n    amt: 2100,\n  },\n];\n\nconst data2 = [\n    { name: 'Incidente A', value: 400 },\n    { name: 'Incidente B', value: 300 },\n    { name: 'Incidente C', value: 300 },\n    { name: 'Incidente D', value: 200 },\n  ];\n\nconst renderActiveShape = (props: { cx: any; cy: any; midAngle: any; innerRadius: any; outerRadius: any; startAngle: any; endAngle: any; fill: any; payload: any; percent: any; value: any; }) => {\n    const RADIAN = Math.PI / 180;\n    const { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle, fill, payload, percent, value } = props;\n    const sin = Math.sin(-RADIAN * midAngle);\n    const cos = Math.cos(-RADIAN * midAngle);\n    const sx = cx + (outerRadius + 10) * cos;\n    const sy = cy + (outerRadius + 10) * sin;\n    const mx = cx + (outerRadius + 30) * cos;\n    const my = cy + (outerRadius + 30) * sin;\n    const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    const ey = my;\n    const textAnchor = cos >= 0 ? 'start' : 'end';\n  \n    return (\n      <g>\n        <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n          {payload.name}\n        </text>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        <Sector\n          cx={cx}\n          cy={cy}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          innerRadius={outerRadius + 6}\n          outerRadius={outerRadius + 10}\n          fill={fill}\n        />\n        <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n        <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">{`${value}`}</text>\n        <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n          {`(Rate ${(percent * 100).toFixed(2)}%)`}\n        </text>\n      </g>\n    );\n  };\n\ninterface IProps {\n    setStage(stage: Stage): void\n}\ninterface IState {}\n\nexport class Dashboard extends React.Component<IProps, IState>{\n\n\n    constructor(props: IProps) {\n        super(props)\n    }\n\n    state = {\n        activeIndex: 0,\n      };\n    \n      onPieEnter = (_: any, index: any) => {\n        this.setState({\n          activeIndex: index,\n        });\n      };\n\n\n    render(): React.ReactNode {\n        return <>\n        <h1>Dashboard</h1>\n\n        <h3>Metricas</h3>\n        <br></br>\n        \n        <Grid>\n          <Column lg={6}>\n\n            <h4>Mensajes enviados por mes</h4>\n            <br></br>\n            <Tile>\n            <LineChart\n          width={500}\n          height={300}\n          data={data}\n          margin={{\n            top: 30,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          <Line type=\"monotone\" dataKey=\"WhatsApp\" stroke=\"#8884d8\" activeDot={{ r: 8 }} />\n          <Line type=\"monotone\" dataKey=\"Voz\" stroke=\"#82ca9d\" />\n          <Line type=\"monotone\" dataKey=\"SMS\" stroke=\"#12aa9d\" />\n        </LineChart>\n        </Tile>\n        </Column>\n          <Column lg={6}>\n            <h4>Tipo de falla</h4>\n            <br></br>\n            <Tile>\n            <PieChart width={500} height={300} margin={{\n            top: 5,\n            right: 0,\n            left: 20,\n            bottom: 10,\n          }}>\n          <Pie\n            activeIndex={this.state.activeIndex}\n            activeShape={renderActiveShape}\n            data={data2}\n            cx=\"50%\"\n            cy=\"50%\"\n            innerRadius={60}\n            outerRadius={80}\n            fill=\"#8884d8\"\n            dataKey=\"value\"\n            onMouseEnter={this.onPieEnter}\n          />\n        </PieChart>\n        </Tile>\n        </Column>\n        </Grid>\n        \n      \n        \n        \n        </>\n    }\n\n}","import { useState, useCallback } from 'react';\nimport ReactFlow, {\n  Controls,\n  Background,\n  applyNodeChanges,\n  applyEdgeChanges,\n  addEdge,\n  NodeChange,\n  EdgeChange,\n  Node,\n  Connection,\n  Edge,\n  MarkerType,\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport \"../../custom.css\"\nimport { Accordion, Tile, AccordionItem, ComboBox, Grid, Column } from 'carbon-components-react';\n\nconst initialNodes = [\n  {\n    id: '1',\n    data: { label: 'Comunicacion 1'},\n    position: { x: 0, y: 20 },\n    type: 'input',\n  },\n  {\n    id: '2',\n    data: { label: 'Comunicacion 2' },\n    position: { x: 170, y: 20 },\n    type: 'input',\n  },\n  {\n    id: '3',\n    data: { label: 'Comunicacion 3' },\n    position: { x: 340, y: 20 },\n    type: 'input',\n  },\n  {\n    id: '4',\n    data: { label: 'Comunicacion 4' },\n    position: { x: 340+170, y: 20 },\n    type: 'input',\n  },\n  {\n    id: '5',\n    data: { label: 'Canal WhatsApp' },\n    position: { x: 100, y: 200 },\n    type: \"output\",\n    selectable: false,\n  },\n\n  {\n    id: '6',\n    data: { label: 'Canal SMS' },\n    position: { x: 100 + 170, y: 200 },\n    type: \"output\",\n    selectable: false,\n  },\n\n  {\n    id: '7',\n    data: { label: 'Canal Voz' },\n    position: { x: 100 + 2*170, y: 200 },\n    type: \"output\",\n    selectable: false,\n  },\n];\n\nconst initialEdges: any[] | (() => any[]) = [{ id: '1-2', source: '1', target: '7' }];\n\nfunction Flow() {\n  const [nodes, setNodes] = useState(initialNodes);\n  const [edges, setEdges] = useState(initialEdges);\n  const [selected, setSelected] = useState(\"1\");\n\n  const [segmento, setSegmento] = useState(\"Empresas\")\n  const [horario, setHorio] = useState(\"Todo Horario\")\n\n  const onNodesChange = useCallback(\n    // @ts-ignore\n    (changes: NodeChange[]) => setNodes((nds) => applyNodeChanges(changes, nds)),\n    []\n  );\n  const onEdgesChange = useCallback(\n    (changes: EdgeChange[]) => setEdges((eds) => applyEdgeChanges(changes, eds)),\n    []\n  );\n\n  const onConnect = useCallback((params: Edge | Connection) => setEdges((eds) => addEdge(params, eds)), []);\n\n  const defaultEdgeOptions = {\n    style: { strokeWidth: 1, stroke: 'black' },\n    type: 'floating',\n    label: 'mensaje',\n    markerEnd: {\n      type: MarkerType.ArrowClosed,\n      color: 'black',\n    },\n  };\n\n  const onNodeSelected = useCallback((nodes: Node[]) => setSelected(nodes.length == 1? nodes[0].id : \"\"), [])\n\n  return (\n    <>\n\n    <Grid>\n      <Column lg={11}>\n      <div style={{ height: \"500px\", width: \"1000px\"}}>\n      <ReactFlow\n        fitView\n        nodes={nodes}\n        onNodesChange={onNodesChange}\n        edges={edges}\n        onEdgesChange={onEdgesChange}\n        onSelectionChange={(selection) => onNodeSelected(selection.nodes)}\n        onConnect={onConnect}\n        minZoom={1.4}\n        defaultEdgeOptions={defaultEdgeOptions}\n      >\n        <Background />\n        <Controls />\n      </ReactFlow>\n      </div>\n    </Column>\n    <Column lg={5}>\n      {selected != \"\" &&\n    <Tile>\n        <h3>{initialNodes.find((x) => x.id == selected)?.data.label}</h3>\n        <br></br>\n        <Accordion>\n          <AccordionItem title={\"Configuracion Comunicacion\"} open={true}>\n            <ComboBox id='' items={[\"Oficina\", \"Todo Horario\", \"Mañana\", \"Tarde\"]} titleText={\"Horario\"} selectedItem={horario}></ComboBox>\n            <ComboBox id='' items={[\"Plantilla 1\",\"Plantilla 2\",\"Plantilla 3\"]} titleText={\"Plantilla\"}></ComboBox>\n          </AccordionItem>\n\n          <AccordionItem title={\"Segmento\"} open={true}>\n            <ComboBox id='' items={[\"Empresas\", \"Personas\"]} selectedItem={segmento} titleText={\"Segmento\"} onChange={(x) => {\n              if(x.selectedItem) {\n                setSegmento(x.selectedItem)\n                if (x.selectedItem === \"Personas\") {\n                  setHorio(\"Oficina\")\n                } else {\n                  setHorio(\"Todo Horario\")\n                }\n              }\n              }}>\n            </ComboBox>\n          </AccordionItem>\n        </Accordion>\n      </Tile>\n      }\n    </Column>\n    </Grid>\n    </>\n  );\n}\n\nexport default Flow;\n","import { Button, ComboBox, InlineLoading, Loading, ProgressIndicator, ProgressStep, Table, TableBody, TableCell, TableHead, TableHeader, TableRow, TextInput, ToastNotification } from 'carbon-components-react';\nimport CustomHeader from './components/CustomHeader';\nimport React from 'react';\nimport { Login } from './components/Login';\nimport { Dashboard } from './components/Dashboard';\nimport { Rules } from './components/Rules';\nimport { Plantilla } from './components/Plantilla';\n\nexport enum Stage {\n    login,\n    dashboard,\n    rules,\n    templates\n}\n\ninterface IProps {}\n\ninterface IState {\n    stage: Stage \n}\n\nclass App extends React.Component<IProps, IState> {\n\n    constructor(props: IProps) {\n        super(props)\n        this.state = {stage: Stage.login}\n        this.setStage = this.setStage.bind(this)\n\n        this.ScreenDispatcher = this.ScreenDispatcher.bind(this)\n    }\n\n    setStage(stage: Stage) {\n        this.setState({stage: stage})\n    }\n\n    ScreenDispatcher(): React.ReactNode {\n\n        switch(this.state.stage) {\n            case Stage.login: {\n                return <Login setStage={this.setStage}></Login>\n            }\n            case Stage.dashboard: {\n                return <Dashboard setStage={this.setStage} />\n            }\n            case Stage.rules: {\n                return <Rules setStage={this.setStage}/>\n            }\n            case Stage.templates: {\n                return <Plantilla setStage={this.setStage}/>\n            }\n            default: {\n                return <Login setStage={this.setStage}></Login>\n            }\n        }\n        \n    }\n\n    render(): React.ReactNode {\n        return <CustomHeader stage={this.state.stage} setStage={this.setStage}>\n            {this.ScreenDispatcher()}\n        </CustomHeader>\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport { Stage } from '../App';\nimport Flow from './Flows/Flow';\nimport { Content } from 'carbon-components-react';\n\n\ninterface IProps {setStage(stage: Stage): void}\ninterface IState {}\n\n\n\nexport class Rules extends React.Component<IProps, IState> {\n\n\n    constructor(props: IProps) {\n        super(props)\n    }\n\n\n    render(): React.ReactNode {\n\n\n        return <Content>\n\n            <h1>Rules</h1>\n            <Flow></Flow>\n      </Content>\n    }\n\n}","import { Column, Content, Grid, RadioTile, TextArea, TileGroup } from \"carbon-components-react\";\nimport React from \"react\";\nimport { Stage } from \"../App\";\n\n\n\ninterface IProps {setStage(stage: Stage): void}\ninterface IState {\n    selected: string|number\n    plantillas: {[key: string|number]: string}\n}\n\n\n\nexport class Plantilla extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props)\n        this.state = {selected: \"1\", plantillas: {\n            \"1\": `Estimado\n            Cliente\n            \n            En estos momentos su servicio: <$servicio> se ha visto afectado por una <$afectado> debido a <$motivo> en su sector. Nuestros equipos técnicos están trabajando en la resolución del problema, el cual esperamos que sea resuelto a las <$hora_reposicion> hrs.\n            \n            \n            Muchas gracias por su comprensión`,\n            \"2\": `Estimado\n            Colaborador\n            \n            En estos momentos el servicio de su cliente: <$cliente> se ha visto afectado por una <$afectado> en <$ubicacion>  desde las <$hora_incidente> debido a <$motivo> . Se espera que la reposición del servicio sea a las <$hora_reposicion> hrs para que usted pueda comunicar y mantener informado a su cliente.\n            \n            atte.,\n            Servicio de Notificaciones automáticas\n            `,\n            \"3\": \"plantilla 3\"\n        }}\n        this.onChange = this.onChange.bind(this)\n    }\n\n    onChange(event: React.ChangeEvent<HTMLTextAreaElement>) {\n        let aux = {...this.state.plantillas}\n        aux[this.state.selected] = event.target.value\n        this.setState({plantillas: aux})\n    }\n\n\n    render(): React.ReactNode {\n        return <Content>\n            <h1>Plantillas</h1>\n            <br></br>\n            <Grid>\n                <Column lg={4}>\n                <TileGroup\n                 defaultSelected=\"1\"\n                 legend=\"Seleccion de plantillas\"\n                 name=\"radio tile group\"\n                 onChange={(x) => {if(x) {this.setState({selected: x}); console.log(x)}}}\n                 >\n                 <RadioTile\n                   id=\"radio-tile-1\"\n                   value=\"1\"\n                    style={{ marginBottom: '.5rem' }}>\n                    Plantilla 1\n                  </RadioTile>\n                  <RadioTile\n                    id=\"radio-tile-2\"\n                    value=\"2\"\n                    style={{ marginBottom: '.5rem' }}>\n                    Plantilla 2\n                  </RadioTile>\n                  <RadioTile id=\"radio-tile-3\" value=\"3\">\n                    Plantilla 3\n                  </RadioTile>\n                </TileGroup>\n                </Column>\n                <Column lg={10} >\n                    <TextArea labelText={\"Texto de plantilla\"} value={this.state.plantillas[this.state.selected]} onChange={this.onChange} rows={12}>\n                    </TextArea>\n                </Column>\n            </Grid>\n        </Content>\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}